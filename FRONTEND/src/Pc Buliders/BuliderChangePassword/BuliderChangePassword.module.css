.body {
    margin: 0;
    background: linear-gradient(135deg, #000000, #0d0d0d, #121212);
    min-height: 100vh;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 20px;
    transition: background 0.5s ease;
    position: relative;
    overflow: hidden;
  }
  
  /* Background animation elements */
  .body::before {
    content: '';
    position: absolute;
    width: 200vw;
    height: 200vh;
    top: -50vh;
    left: -50vw;
    background: radial-gradient(circle, transparent 20%, #000 70%);
    animation: backgroundPulse 15s infinite linear;
    opacity: 0.3;
  }
  
  .body::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.03'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  }
  
  .Card {
    background: rgba(0, 0, 0, 0.95);
    backdrop-filter: blur(10px);
    height: 640px; /* Increased height to accommodate all fields */
    width: 500px;
    border-radius: 30px;
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    flex-direction: column;
    border: 1px solid rgba(40, 40, 40, 0.6);
    box-shadow: 
      0 10px 30px rgba(0, 0, 0, 0.8),
      0 15px 12px rgba(0, 0, 0, 0.5),
      0 0 20px rgba(50, 50, 50, 0.3);
    position: relative;
    overflow: hidden;
    animation: cardAppear 0.8s ease-out forwards;
    transition: transform 0.4s ease, box-shadow 0.4s ease;
    z-index: 1;
  }
  
  .Card:hover {
    transform: translateY(-10px) rotateX(2deg);
    box-shadow: 
      0 15px 35px rgba(0, 0, 0, 0.9),
      0 20px 15px rgba(0, 0, 0, 0.6),
      0 0 40px rgba(70, 70, 70, 0.3);
  }
  
  /* Animated border effect */
  .Card::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(45deg, #000000, #1a1a1a, #333333, #000000, #222222);
    border-radius: 30px;
    z-index: -1;
    background-size: 400%;
    filter: blur(5px);
    opacity: 0.7;
    animation: borderGlow 12s linear infinite;
  }
  
  /* Animated light streaks */
  .Card::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      45deg,
      transparent,
      rgba(70, 70, 70, 0.1),
      transparent
    );
    transform: rotate(45deg);
    animation: shine 8s infinite;
  }
  
  /* Form field containers */
  .Oldpassword,
  .Newpassword,
  .ReEnterpassword {
    width: 100%;
    display: flex;
    justify-content: center;
    opacity: 0;
    transform: translateY(20px);
    position: relative;
  }
  
  /* Sequential fade-in animations */
  .Oldpassword {
    animation: fadeInUp 0.5s ease-out 0.3s forwards;
  }
  
  .Newpassword {
    animation: fadeInUp 0.5s ease-out 0.5s forwards;
  }
  
  .ReEnterpassword {
    animation: fadeInUp 0.5s ease-out 0.7s forwards;
  }
  
  /* Animated field focus indicators */
  .Oldpassword::after,
  .Newpassword::after,
  .ReEnterpassword::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 50%;
    width: 0;
    height: 2px;
    background: linear-gradient(90deg, #333, #555, #333);
    transform: translateX(-50%);
    transition: width 0.3s ease;
    opacity: 0;
  }
  
  .Oldpassword:focus-within::after,
  .Newpassword:focus-within::after,
  .ReEnterpassword:focus-within::after {
    width: 240px;
    opacity: 1;
  }
  
  /* Button container */
  .button {
    margin-top: 10px;
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.5s ease-out 0.9s forwards;
  }
  
  /* Button styling */
  .button button {
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275) !important;
    position: relative;
    overflow: hidden;
    background: linear-gradient(145deg, #ffffff, #e6e6e6) !important;
    transform-style: preserve-3d;
  }
  
  .button button:hover {
    transform: scale(1.05) translateY(-3px);
    background: linear-gradient(145deg, #f8f9fa, #e9ecef) !important;
    box-shadow: 
      0 10px 20px rgba(0, 0, 0, 0.5),
      0 6px 6px rgba(0, 0, 0, 0.3);
  }
  
  .button button:active {
    transform: scale(0.98) translateY(0);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
    transition: all 0.1s;
  }
  
  /* Button glow effect */
  .button button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.3),
      transparent
    );
    transition: 0.5s;
  }
  
  .button button:hover::before {
    left: 100%;
  }
  
  /* Animation for inputs on focus */
  /* .Oldpassword:focus-within,
  .Newpassword:focus-within,
  .ReEnterpassword:focus-within {
    animation: subtlePulse 1.5s infinite alternate;
  } */
  
  /* Input icon animations */
  /* .ReEnterpassword :global(.MuiInputAdornment-root),
  .Newpassword :global(.MuiInputAdornment-root),
  .Oldpassword :global(.MuiInputAdornment-root) {
    transition: transform 0.3s ease;
  }
  
  .ReEnterpassword:focus-within :global(.MuiInputAdornment-root),
  .Newpassword:focus-within :global(.MuiInputAdornment-root),
  .Oldpassword:focus-within :global(.MuiInputAdornment-root) {
    transform: scale(1.1);
  }
   */
  /* Floating particles effect */
  @keyframes float {
    0% { transform: translateY(0) rotate(0deg); opacity: 0; }
    50% { opacity: 0.3; }
    100% { transform: translateY(-100px) rotate(360deg); opacity: 0; }
  }
  
  /* Adding floating dot particles */
  .Card::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }
  
  /* Add floating particles dynamically with JS */
  /* This would be implemented in JS, but styled here */
  .particle {
    position: absolute;
    width: 3px;
    height: 3px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    animation: float 10s infinite linear;
  }
  
  /* Key animation definitions */
  @keyframes cardAppear {
    0% {
      opacity: 0;
      transform: translateY(50px) scale(0.95);
      filter: blur(10px);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1);
      filter: blur(0);
    }
  }
  
  @keyframes fadeInUp {
    0% {
      opacity: 0;
      transform: translateY(30px);
    }
    60% {
      transform: translateY(-5px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes borderGlow {
    0% {
      background-position: 0 0;
    }
    50% {
      background-position: 400% 0;
    }
    100% {
      background-position: 0 0;
    }
  }
  
  @keyframes shine {
    0% {
      left: -150%;
    }
    100% {
      left: 150%;
    }
  }
  
  @keyframes subtlePulse {
    0% {
      transform: scale(1);
    }
    100% {
      transform: scale(1.02);
    }
  }
  
  @keyframes backgroundPulse {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
  }
  
  /* Password strength indicator animation */
  .strengthIndicator {
    height: 3px;
    width: 0;
    margin-top: -15px;
    margin-bottom: 15px;
    background: linear-gradient(90deg, #ff0000, #ffff00, #00ff00);
    opacity: 0;
    transition: width 0.5s ease, opacity 0.5s ease;
  }
  
  .Newpassword:focus-within + .strengthIndicator,
  .ReEnterpassword:focus-within + .strengthIndicator {
    width: 240px;
    opacity: 1;
  }
  
  /* Password match indicator */
  .matchIndicator {
    font-size: 11px;
    color: #aaa;
    text-align: center;
    margin-top: -10px;
    margin-bottom: 5px;
    height: 15px;
    opacity: 0;
    transform: translateY(10px);
    transition: opacity 0.3s ease, transform 0.3s ease;
  }
  
  .ReEnterpassword:focus-within ~ .matchIndicator {
    opacity: 1;
    transform: translateY(0);
  }
  
  /* Success animation for submit */
  @keyframes success {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
  }
  
  .button button:active::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.1);
    animation: success 0.5s ease-out;
  }
  
  /* Dynamic shadow effect when typing */
  :global(.Mui-focused) {
    box-shadow: 0 0 20px rgba(40, 40, 40, 0.2);
  }
  
  /* Responsive styles */
  @media (max-width: 600px) {
    .Card {
      width: 90%;
      height: auto;
      padding: 40px 20px;
    }
  }
  
  /* Additional animation for eye icon toggle */
  :global(.MuiIconButton-root) {
    transition: transform 0.2s ease !important;
  }
  
  :global(.MuiIconButton-root:hover) {
    transform: scale(1.1) !important;
  }
  
  :global(.MuiIconButton-root:active) {
    transform: scale(0.95) !important;
  }